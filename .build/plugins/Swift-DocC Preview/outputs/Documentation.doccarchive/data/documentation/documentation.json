{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/ra1028\/swiftui-hooks"}]}]}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"SwiftUI Hooks is a SwiftUI implementation of React Hooks. Brings the state and lifecycle into the function view, without depending on elements that are only allowed to be used in struct views such as @State or @ObservedObject."},{"type":"text","text":" "},{"type":"text","text":"It allows you to reuse stateful logic between views by building custom hooks composed with multiple hooks."},{"type":"text","text":" "},{"type":"text","text":"Furthermore, hooks such as useEffect also solve the problem of lack of lifecycles in SwiftUI."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The API and behavioral specs of SwiftUI Hooks are entirely based on React Hooks, so you can leverage your knowledge of web applications to your advantage."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"There’re already a bunch of documentations on React Hooks, so you can refer to it and learn more about Hooks."}]},{"type":"unorderedList","items":[{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/reactjs.org\/docs\/hooks-intro.html"}]}]},{"content":[{"type":"paragraph","inlineContent":[{"type":"reference","isActive":true,"identifier":"https:\/\/www.youtube.com\/watch?v=dpw9EHDh2bM"}]}]}]},{"anchor":"Featured","level":3,"type":"heading","text":"Featured"},{"type":"links","style":"detailedGrid","items":["doc:\/\/Documentation\/documentation\/Documentation\/Introduction","doc:\/\/Documentation\/documentation\/Documentation\/GettingStarted","doc:\/\/Documentation\/documentation\/Documentation\/BuildingYourOwnHooks","doc:\/\/Documentation\/documentation\/Documentation\/RulesHooks"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/documentation"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/Documentation\/documentation\/Documentation","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"kind":"symbol","metadata":{"color":{"standardColorIdentifier":"green"},"role":"collection","title":"Documentation","roleHeading":"Framework","symbolKind":"module","externalID":"Documentation","modules":[{"name":"Documentation"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Essentials","identifiers":["doc:\/\/Documentation\/documentation\/Documentation\/TodoHookBasic","doc:\/\/Documentation\/documentation\/Documentation\/TodoHookNetwork","doc:\/\/Documentation\/documentation\/Documentation\/TodoHookAdvance"]},{"title":"Articles","identifiers":["doc:\/\/Documentation\/documentation\/Documentation\/LoadMoreObservableAtom","doc:\/\/Documentation\/documentation\/Documentation\/BuildingYourOwnHooks","doc:\/\/Documentation\/documentation\/Documentation\/GettingStarted","doc:\/\/Documentation\/documentation\/Documentation\/HookLoadMore","doc:\/\/Documentation\/documentation\/Documentation\/Introduction","doc:\/\/Documentation\/documentation\/Documentation\/RulesHooks"],"generated":true}],"references":{"doc://Documentation/documentation/Documentation/TodoHookBasic":{"role":"sampleCode","title":"TodoHookBasic App","abstract":[{"type":"text","text":"TodoHookAdvance into an iOS app for creating todolist."}],"identifier":"doc:\/\/Documentation\/documentation\/Documentation\/TodoHookBasic","kind":"article","type":"topic","url":"\/documentation\/documentation\/todohookbasic"},"doc://Documentation/documentation/Documentation/Introduction":{"role":"article","title":"Introduction","abstract":[{"type":"text","text":"A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Documentation\/documentation\/Documentation\/Introduction","kind":"article","type":"topic","url":"\/documentation\/documentation\/introduction"},"doc://Documentation/documentation/Documentation/LoadMoreObservableAtom":{"role":"article","title":"LoadMoreObservableAtom","abstract":[{"type":"text","text":"LoadMore with ObservableObject, It’s object for load more data items in a view in SwiftUI."}],"identifier":"doc:\/\/Documentation\/documentation\/Documentation\/LoadMoreObservableAtom","kind":"article","type":"topic","url":"\/documentation\/documentation\/loadmoreobservableatom"},"doc://Documentation/documentation/Documentation/TodoHookAdvance":{"role":"sampleCode","title":"TodoHookAdvance App","abstract":[{"type":"text","text":"TodoHookAdvance into an iOS app for creating todolist."}],"identifier":"doc:\/\/Documentation\/documentation\/Documentation\/TodoHookAdvance","kind":"article","type":"topic","url":"\/documentation\/documentation\/todohookadvance"},"doc://Documentation/documentation/Documentation/HookLoadMore":{"role":"article","title":"HookLoadMore","abstract":[{"type":"text","text":"The hook function to load more items with Array or IdentifiedArrayOf."}],"identifier":"doc:\/\/Documentation\/documentation\/Documentation\/HookLoadMore","kind":"article","type":"topic","url":"\/documentation\/documentation\/hookloadmore"},"doc://Documentation/documentation/Documentation/RulesHooks":{"role":"article","title":"RulesHooks","abstract":[{"type":"text","text":"A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Documentation\/documentation\/Documentation\/RulesHooks","kind":"article","type":"topic","url":"\/documentation\/documentation\/ruleshooks"},"doc://Documentation/documentation/Documentation/GettingStarted":{"role":"article","title":"Getting Started with Hooks","abstract":[{"type":"text","text":"A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Documentation\/documentation\/Documentation\/GettingStarted","kind":"article","type":"topic","url":"\/documentation\/documentation\/gettingstarted"},"doc://Documentation/documentation/Documentation/BuildingYourOwnHooks":{"role":"article","title":"Building Your OwnHooks","abstract":[{"type":"text","text":"A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Documentation\/documentation\/Documentation\/BuildingYourOwnHooks","kind":"article","type":"topic","url":"\/documentation\/documentation\/buildingyourownhooks"},"https://www.youtube.com/watch?v=dpw9EHDh2bM":{"title":"Youtube Video","titleInlineContent":[{"type":"text","text":"Youtube Video"}],"type":"link","identifier":"https:\/\/www.youtube.com\/watch?v=dpw9EHDh2bM","url":"https:\/\/www.youtube.com\/watch?v=dpw9EHDh2bM"},"https://reactjs.org/docs/hooks-intro.html":{"title":"React Hooks Documentation","titleInlineContent":[{"type":"text","text":"React Hooks Documentation"}],"type":"link","identifier":"https:\/\/reactjs.org\/docs\/hooks-intro.html","url":"https:\/\/reactjs.org\/docs\/hooks-intro.html"},"doc://Documentation/documentation/Documentation/TodoHookNetwork":{"role":"sampleCode","title":"TotoHookNetwork App","abstract":[{"type":"text","text":"TodoHookAdvance into an iOS app for creating todolist."}],"identifier":"doc:\/\/Documentation\/documentation\/Documentation\/TodoHookNetwork","kind":"article","type":"topic","url":"\/documentation\/documentation\/todohooknetwork"},"https://github.com/ra1028/swiftui-hooks":{"title":"SwiftUI Hooks","titleInlineContent":[{"type":"text","text":"SwiftUI Hooks"}],"type":"link","identifier":"https:\/\/github.com\/ra1028\/swiftui-hooks","url":"https:\/\/github.com\/ra1028\/swiftui-hooks"},"doc://Documentation/documentation/Documentation":{"role":"collection","title":"Documentation","abstract":[{"type":"text","text":"A SwiftUI implementation of React Hooks. Enhances reusability of stateful logic and gives state and lifecycle to function view."}],"identifier":"doc:\/\/Documentation\/documentation\/Documentation","kind":"symbol","type":"topic","url":"\/documentation\/documentation"}}}